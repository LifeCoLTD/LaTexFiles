\documentclass[UTF8]{ctexart}
\usepackage{listings}
\usepackage{xcolor}
\usepackage{amsmath}
\usepackage{mathtools}
\usepackage{xcolor}
\usepackage{amssymb}
\usepackage{float}
\usepackage{subfigure}
\usepackage{flafter} 
\usepackage[a4paper,left=3cm,right=3cm]{geometry}
\title{\heiti 模糊控制及其应用}
\author{\kaishu 报告小组成员：王浩同、苑婉秋、仝树、吕元玮、张九斤}
\date{\today}
\begin{document}
	\maketitle
	\tableofcontents
	\newpage
	\setlength{\parindent}{2em}
	\section{模糊控制及其应用概述}
	\subsection{定义}
	 模糊控制，顾名思义，利用模糊数学的基本思想和理论的控制方法。在传统的控制领域里，控制系统动态模式的精确与否是影响控制优劣的最主要关键，系统动态的信息越详细，则越能达到精确控制的目的。然而，对于复杂的系统，由于变量太多，往往难以正确的描述系统的动态，于是工程师便利用各种方法来简化系统动态，以达成控制的目的，但却不尽理想。换言之，传统的控制理论对于明确系统有强而有力的控制能力，但对于过于复杂或难以精确描述的系统，则显得无能为力了。因此便尝试着以模糊数学来处理这些控制问题。
	\subsection{发展历程}
	 模糊控制的真正开拓者是英国伦敦大学的E.H.Mamdani教授,1974年他研制了第一个工业应用的模糊控制系统—蒸气发动机自动运行实验装置,1980年实用化的模糊控制系统在 丹麦的F.L.s midth水泥厂的水泥窑中投入运行。与此同时日本的一些企业也参与了模糊 控制系统的开发,例如日立制作所的列车模糊控制自动运行系统，富士电机集团的净水厂 药剂添加模糊控制等都获得了成功。 \par
	 随后,从1986年起,日本企业界掀起了模糊控制研究开发的热潮,各种模糊计算机、模糊控 制器相继问世,模糊控制从工业控制扩展到了空调机、洗衣机等家电设备.同时大力开展了 人与机械、人与社会等的模糊系统的开发研究.在我1981年成立了“中国模糊数学与系统学会”,并出版了《模糊数学》杂志,后更名为《模糊系统与数学》.1988年7月,国家自然科学基金委员会设立了“模糊信息处理和智能机器”的研究课题,北师大、川大、国防科大及电子科学研究院等16所大学与院所参与了本课题的研究.1989年3月国家经济计划委 员会得到了世界银行的资金援助,在北师大设立了“模糊信息处理和模糊计算机”研究的专 门研究室.到目前为止,在我国有不下百例的模糊系统实用化。其中与控制有关的如太原3 号高炉冶炼模糊控制,乙烯生产专用模糊控制器等,都在生产实践中取得了良好的效果.与 此同时,世界各国与模糊系统有关的学术组织及国际组织相继成立.如1989年成立的国际 模糊系统学会(IFsA),1989年成立的日本模糊系统学会s(OFT)都在积极研究模糊理论中未解决的课题和开发模糊控制等实用化模糊技术。 \par
	 \subsection{模糊控制的特点}
	 现代化生产的特点是大规模化和复杂化,这就要求生产过程实现高度自动化。复杂生产过程的控制采用以数学模型为基础的经典的或现代控制理论方法难以取得良好的效果,一是有的过程建立数学模型要花费很长的时间和较大的投资,而且建立的模型不一定完全符合 过程的真实情况.有的过程因变化参数多、外界干扰大、过程特性变化也大,根本无法建立 数学模型.因此以语言模型为基础的人工智能(Al)型的控制技术受到了极大的重视,尤其 是近几年来,在使用传统的控制技术难以实现控制的工业过程中,引人了专家诀窍和现场熟 练操作人员的经验和操作方法等符合人类思维的模糊控制,并得到了越来越广泛的应用。模糊控制有如下特点:\par
	 1.不斋要数学模型就可以记述控制规律,特别是适合于难以数学模型表示的生产过程的控制,较之数学模型简单明了;\par
	 2.对评价要素多的多变量过程,可以简单地进行统一处理;\par
	 3.对非线性系统可以不考虑非线性特性并能进行处理;\par
	 4.对大滞后过程可通过预测规则,容易实现模式化;\par
	 5.对特别复杂的过程可采用多级推理方法,进行状态空间分割,实现柔性控制;\par
	 6.模糊控制中隶属函数的边界部分,可以吸收某种程度的干扰,提高控制的可靠性;\par
	 7.可以防止人为的错误等。\par
	 \subsection{模糊理论}
	 模糊集、模糊逻辑和模糊推理是模糊理论的基础。\par
	 1.模糊集：设$A$是集合$X$到$[0,1]$的一个映射，$A$：$X$ $\to$ $[0,1]$，$x$ $\to$ $A(x)$, 则称$X$是$A$上的模糊集，$A(x)$称为模糊集$A$的隶属函数，或称$A(x)$为$x$对模糊集$A$的隶属度。用来表达模糊性概念的集合。 又称模糊集、模糊子集。普通的集合是指具有某种属性的对象的全体。这种属性所表达的概念应该是清晰的，界限分明的。因此每个对象对于集合的隶属关系也是明确的，非此即彼。但在人们的思维中还有着许多模糊的概念，例如年轻、很大、暖和、傍晚等，这些概念所描述的对象属性不能简单地用“是”或“否”来回答，模糊集合就是指具有某个模糊概念所描述的属性的对象的全体。由于概念本身不是清晰的、界限分明的，因而对象对集合的隶属关系也不是明确的、非此即彼的。这一概念是美国加利福尼亚大学控制论专家L.A.扎德于 1965 年首先提出的。模糊集合这一概念的出现使得数学的思维和方法可以用于处理模糊性现象，从而构成了模糊集合论（中国通常称为模糊性数学)的基础。
	 \par
	 2.模糊逻辑：模糊逻辑指模仿人脑的不确定性概念判断、推理思维方式，对于模型未知或不能确定的描述系统，以及强非线性、大滞后的控制对象，应用模糊集合和模糊规则进行推理，表达过渡性界限或定性知识经验，模拟人脑方式，实行模糊综合判断，推理解决常规方法难于对付的规则型模糊信息问题。模糊逻辑善于表达界限不清晰的定性知识与经验，它借助于隶属度函数概念，区分模糊集合，处理模糊关系，模拟人脑实施规则型推理，解决因“排中律”的逻辑破缺产生的种种不确定问题 。 \par
	 3.模糊推理：从不精确的前提集合中得出可能的不精确结论的推理过程，又称近似推理。在人的思维中，推理过程常常是近似的。例如，人们根据条件语句（假言）“若西红柿是红的”，则西红柿是熟的”和前提（直言）“西红柿非常红”，立即可得出结论“西红柿非常熟”。这种不精确的推理不可能用经典的二值逻辑或多值逻辑来完成。L.A.扎德于1975年首先提出模糊推理的合成规则和把条件语句“若$x$为$A$，则$y$为$B$”转换为模糊关系的规则。此后J.F.鲍德温和R.R.耶格尔等人又各自采用带有模糊真值的模糊逻辑而提出了不同于扎德的方法。
	 \subsection{相关应用}
	 模糊控制从工业过程控制、机械设备控制，扩大到了家电产品的控制，甚至涉足到航空、航天等领域。这些不同的控制对象所需要的推理速度和控制规则数均不相同。模糊控制的应用实例有很多。例如模糊推理芯片，专用模糊芯片，数字模糊处理器，微型机和可编程序控制器构成的模糊控制系统。
	 实例：模糊控制系统总体设计 
	 对退火炉燃烧过程的控制，要求维持稳定的温度以保证钢材退火质量。最佳燃烧过程取决于燃料和空气的比例。根据统计分析，燃烧过程中空气过剩率μ= 1.02～1.10时热效率最高。在燃烧过程中，控制系统应当通过控制燃油和空气的比例来保持最佳的燃烧状态。此外，炉膛内的压力是随工作情况而变化，而炉压又影响炉温，因此，要维持稳定的炉温,还需对炉膛内的压力进行调节。保持适当的炉膛压力，以提高热效率，延长窑炉的寿命。综上所述，要保证退火温度，实现最佳燃烧过程，控制系统应包括以下三个组成部分：
	 ①温度-燃油/空气流量调节回路；②燃油/空气最佳比例调节回路；③炉膛压力调节回路。 
	 采用自寻优模糊控制器的退火炉燃烧过程控制系统如图1所示。图中FPC为炉压模糊控制器；FTC为温度模糊控制器,它根据温度信号对油量和风量进行调节；FAC为油/风比模糊控制自寻优控制器，它不断发出试探信号，通过对燃油量的测量，搜索最佳油/风比。燃料/空气控制采用并行结构。
	 \subsection{小结}
	 在模糊控制的发展初期，大多数学者的主要精力放在模糊控制的应用研究上，在很多领域取得辉煌的成果。但与应用的成果相比，模糊控制的系统分析和理论研究却没有显著进展，以至于西方的一些学者对模糊控制的理论依据和有效性产生疑虑。1993年7月，在美国第十一届人工智能年会上，加州大学圣地亚哥分校计算机科学和工程系助教授Clarles Elkan博士的一篇题为“模糊逻辑似是而非的成功”报告，就代表了这种思想。虽然C.Elkan 的一些观点是不确切和片面的，会后很多专家对此进行了批驳，但他确确实实指出了模糊控制理论基础不够坚实的缺点，从而引起了模糊控制领域的学者的广泛关注并加强了对这一方面的研究。目前模糊控制的理论研究很热，并已取得了许多显著进展，模糊控制在理论上和应用方面都取得了巨大成就。虽然模糊控制技术发展历史只有三十年，本身还有待于完善，理论与实际的结合也有待于进一步探索，但是其发展前景十分诱人。 \par
	 目前在国际大趋势的推动下，模糊控制已开始向多元化和交叉学科方向发展。国外专家预言：模糊技术、神经网络技术、混沌理论作为人工智能的三大支柱，将是下一代工业自动化的基础。随着模糊控制理论研究的不断完善和应用的广泛深入、高性能模糊控制器的研究开发，模糊控制技术将会更大限度地发挥其优势，为工业过程控制、运动控制和其它领域的控制开辟新的应用前景。
	 
	 
	\section{MATLAB在模糊控制系统仿真中的应用}
	\subsection{模糊逻辑工具箱介绍}
	Matlab自带的FUZZY \, LOGIC \,TOOLBOX 提供了两种来建立模糊逻辑控制系统，即命令行方式和用户图形界面方式。而用户图形界面更为友好，下文将介绍图形用户界面。 \par
	模糊逻辑工具箱提供了五个基本的交互式图形界面来设计和完成模糊逻辑控制系统，它们分别为：\\
	(1)模糊推理系统编辑器 \par
	该编辑器用于设计和显示模糊推理膝盖痛的一些基本信息与参数，如：推理系统的名称，输入、输出变量的个数和名称，模糊推理系统的类型，解模糊方法等。其中，模糊推理系统可以采用Mamdani或Sugeno两种类型，解模糊方法有最大隶属度法、中位数法、加权平均法等几种。\\
	(2)隶属函数编辑器 \par
	改函数编辑器提供了一个友好的人机图形交互环境，用来设计、修改模糊推理系统中各语言变量对应的隶属函数的相关参数，如隶属函数的形状、范围，以及论域大小等。系统提供的隶属函数有三角形、梯形、高斯形、钟形等等，而且用户还可以自定义。\\
	(3)规则编辑器\par
	通过该编辑器来设计和修改“IF$\cdots$ Then”形式的模糊控制规则(专家经验)。由该编辑器进行模糊控制规则的制定非常方便，它将输入量的各语言变量自动匹配，而设计者只需通过交互式的图形环境选择相应的输出语言变量，这就大大简化了规则的设计和修改。\\
	(4)规则查看器 \par
	规则查看器用于显示各条模糊控制规则 对应的输入量和输出量的隶属函数。通过指定输入量，可以直观地显示所采用的控制规则，以及通过模糊推理得到相应输出量的过程，以便对模糊规则进行修改和优化。\\
	(5)表面查看器 \par	
	该查看器用于显示输入、输出量对应的表面空间，并可改变各轴对应的变量及观察的视角，便于用户对设计的模糊推理系统进行修改和优化。\par
	在命令行输入$fuzzy$，可直接创建一个新的模糊推理系统编辑器。
	\subsection{Matlab仿真程序说明}
	该程序(matlab)为模糊控制的初学者了解模糊控制中隶属度函数以及对于获取模糊控制表提供了很好的一个典范，而整个程序的功能就是起到模糊控制器的作用。关于模糊控制(fuzzy control)器，首先要结局的问题是，把确定的量的转换成相应的模糊量(见程序中的隶属度函数建立过程)，其次是形成模糊控制规则库(见程序的49条规则)，最后就是实现模糊输出量的接模糊判决，程序即通过获取模糊控制表的方法，实现解模糊判决及实现模糊化输出量。具体解释就是，在涉及模糊控制器(这里及matlab程序功能)之前，先设立偏差值$e$，$e$为具体的量(或数值)，$e$经过隶属度函数的作用，输出即为模糊的量，这样被控对象(及模糊获取列表)在模糊控制器的作用后会被反馈到与最初始的偏差比较，完成模糊量到数字量的解模糊华过程。
	
	\subsection{程序运行结果}
	\begin{figure}[H]
		\centering
		\subfigure[模糊控制器结构] 
		{\includegraphics[width=6cm]{mo1.jpg}}
		\subfigure[输入量e的隶属度函数] 
		{\includegraphics[width=6cm]{mo2.jpg}} \\
		\subfigure[输入量ec的隶属度函数] 
		{\includegraphics[width=6cm]{mo3.jpg}} 
		\subfigure[输出量u的隶属度函数] 
		{\includegraphics[width=6cm]{mo4.jpg}} 
		\label{guiFig}
	\end{figure}
	此模糊控制器由输入量$e,ec$与输出量$u$组成，其隶属函数为$7$个，论域范围为$[-3,3]$,模糊规则有$49个$
\lstset{language=Matlab,numbers=left,frame=shadowbox,  
	, breaklines=true,escapechar=@}
\subsection{Matlab代码}
\begin{lstlisting}
%Fuzzy Controller
%@常规模糊控制程序@
clear all;
close all;

a=newfis('fuzzf');

f1=1;    %@建立模糊输入误差e的隶属度函数@
a=addvar(a,'input','e',[-3*f1,3*f1]);            %Parameter e
a=addmf(a,'input',1,'NB','zmf',[-3*f1,-1*f1]);
a=addmf(a,'input',1,'NM','trimf',[-3*f1,-2*f1,0]);
a=addmf(a,'input',1,'NS','trimf',[-3*f1,-1*f1,1*f1]);
a=addmf(a,'input',1,'Z','trimf',[-2*f1,0,2*f1]);
a=addmf(a,'input',1,'PS','trimf',[-1*f1,1*f1,3*f1]);
a=addmf(a,'input',1,'PM','trimf',[0,2*f1,3*f1]);
a=addmf(a,'input',1,'PB','smf',[1*f1,3*f1]);

f2=1;     %@建立模糊输入误差ec的隶属度函数@
a=addvar(a,'input','ec',[-3*f2,3*f2]);          %Parameter ec
a=addmf(a,'input',2,'NB','zmf',[-3*f2,-1*f2]);
a=addmf(a,'input',2,'NM','trimf',[-3*f2,-2*f2,0]);
a=addmf(a,'input',2,'NS','trimf',[-3*f2,-1*f2,1*f2]);
a=addmf(a,'input',2,'Z','trimf',[-2*f2,0,2*f2]);
a=addmf(a,'input',2,'PS','trimf',[-1*f2,1*f2,3*f2]);
a=addmf(a,'input',2,'PM','trimf',[0,2*f2,3*f2]);
a=addmf(a,'input',2,'PB','smf',[1*f2,3*f2]);

f3=1.5;     %@建立模糊输出u的隶属度函数@
a=addvar(a,'output','u',[-3*f3,3*f3]);          %Parameter u
a=addmf(a,'output',1,'NB','zmf',[-3*f3,-1*f3]);
a=addmf(a,'output',1,'NM','trimf',[-3*f3,-2*f3,0]);
a=addmf(a,'output',1,'NS','trimf',[-3*f3,-1*f3,1*f3]);
a=addmf(a,'output',1,'Z','trimf',[-2*f3,0,2*f3]);
a=addmf(a,'output',1,'PS','trimf',[-1*f3,1*f3,3*f3]);
a=addmf(a,'output',1,'PM','trimf',[0,2*f3,3*f3]);
a=addmf(a,'output',1,'PB','smf',[1*f3,3*f3]);

rulelist=[1 1 1 1 1;         %Edit rule base @建立模糊规则库，共49条规则@
1 2 1 1 1;
1 3 2 1 1;
1 4 2 1 1;
1 5 3 1 1;
1 6 3 1 1;
1 7 4 1 1;

2 1 1 1 1;
2 2 2 1 1;
2 3 2 1 1;
2 4 3 1 1;
2 5 3 1 1;
2 6 4 1 1;
2 7 5 1 1;

3 1 2 1 1;
3 2 2 1 1;
3 3 3 1 1;
3 4 3 1 1;
3 5 4 1 1;
3 6 5 1 1;
3 7 5 1 1;

4 1 2 1 1;
4 2 3 1 1;
4 3 3 1 1;
4 4 4 1 1;
4 5 5 1 1;
4 6 5 1 1;
4 7 6 1 1;

5 1 3 1 1;
5 2 3 1 1;
5 3 4 1 1;
5 4 5 1 1;
5 5 5 1 1;
5 6 6 1 1;
5 7 6 1 1;

6 1 3 1 1;
6 2 4 1 1;
6 3 5 1 1;
6 4 5 1 1;
6 5 6 1 1;
6 6 6 1 1;
6 7 7 1 1;

7 1 4 1 1;
7 2 5 1 1;
7 3 5 1 1;
7 4 6 1 1;
7 5 6 1 1;
7 6 7 1 1;
7 7 7 1 1];

a=addrule(a,rulelist);   @设置反模糊化函数@
%showrule(a)                        % Show fuzzy rule base

a1=setfis(a,'DefuzzMethod','mom');  % Defuzzy
writefis(a1,'fuzzf');               % save to fuzzy file "fuzzf.fis" which can be
% simulated with fuzzy tool   
a2=readfis('fuzzf');

disp('fuzzy controller table:e=[-3,+3],ec=[-3,+3]');
Ulist=zeros(7,7);

for i=1:7
for j=1:7
e(i)=-4+i;
ec(j)=-4+j;
Ulist(i,j)=evalfis([e(i),ec(j)],a2);
end
end

Ulist=ceil(Ulist)

figure(1);
plotfis(a2);
figure(2);
plotmf(a,'input',1);
figure(3);
plotmf(a,'input',2);
figure(4);
plotmf(a,'output',1);

\end{lstlisting}


\end{document}
