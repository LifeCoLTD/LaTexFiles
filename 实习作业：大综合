\documentclass[UTF8]{ctexart}
\usepackage{listings}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{mathtools}
\usepackage{xcolor}
\usepackage{amssymb}
\usepackage{float}
\usepackage{subfigure}
\usepackage{times}
%\usepackage[colorlinks,
%linkcolor=black,
%anchorcolor=black,
%citecolor=black
%]{hyperref}
\usepackage[mtbold,mtpluscal,mtplusscr]{mathtime}
\usepackage[a4paper,left=3cm,right=3cm]{geometry}
\newtheorem{thm1}{引理}
\newtheorem{thm2}{引理}
\newtheorem{thm3}{证明}
\pagenumbering{roman}
\newcommand\degree{^\circ}
\title{\heiti 数学系实习作业}
\author{\kaishu 王浩同}
\date{\today}
\begin{document}
	\maketitle
	\pagenumbering{Roman}
	\tableofcontents
	\newpage
	\pagenumbering{arabic}
	\setlength{\parindent}{2em}
	\section{基于RANSAC方法去野点拟合直线}
		\subsection{RANSAC方法}
		假设我们要将$n$个数据点$X={x_1,x_2,...,x_n}$拟合为一个由至少$m$个点决定的模型（ $m \leqslant  n$）。 
		从X中随机选取$m$个项并拟合一个模型。
		给定偏差 $\xi$，计算X中相对于模型的残差在偏差 $\xi$的个数，如果元素个数大于一个阈值$t$，根据一致点集重新拟合模型（可以利用最小二乘或其变种），算法终止。设$k=k+1$，如果$k$小于一个事先给定的$K$，重新选取$m$个项再迭代，否则采用具有迄今最大的一致点集模型，或算法失败。
		
		\subsection{模型参数设定}
		因为本文为直线拟合，故应选取2个项，即$m=2$。
		又鉴于本文要解决的问题样本数量较少，为保证结果有足够的概率去拟合，故设置迭代次数$k=100$，偏差$\xi$
		=0.5, 阈值$t$为数据个数的2/3。
		\subsection{程序运行结果}
		\begin{figure}[H]
			\centering
			\includegraphics[scale=0.5]{quyedian.jpg}
			\caption{程序运行结果}
		\end{figure}
		图中被涂实的点为程序筛选出来的拟合模型的点，直线为求出的最佳直线；根据结果来看，RANSAC算法较好地实现了去野点直线拟合。
		\lstset{language=Matlab,numbers=left,frame=shadowbox,  
			, breaklines=true,escapechar=@}
		\subsection{Matlab代码}
		\begin{lstlisting}
		%@此函数目的在于计算直线方程@
		% a*x1+b*x2+c=0
		% a*x2+b*x2+c=0
		% a^2+b^2=1      @简化 后面 计算点到直线距离求和@
		function line = DistaF(data)
		x = data(1,:);        %@取出data第一行@
		y = data(2,:);        %@取出data第二行@
		k = (y(2)-x(2))/(y(1)-x(1));
		a = sqrt(1-1/(1+k^2)); %@根据三个方程解得@
		b = sqrt(1-a^2);
		if k>0 
		b=-b;
		end
		c=-a*x(1)-b*y(1);
		line = [a,b,c];
		end
		
		close all;clear all;clc;
		
		data=[1,2.1;2,3.9;3,4.1;4,8.2;5,10.3;6,0];
		plot(data(:,1),data(:,2),'ro');     %@显示全部数据@
		
		K=100;             %@设置最大迭代次数@
		sigma=0.4;         %@设置拟合直线与数据距离的偏差@
		pretotal=0;     %@符合拟合模型的数据的个数@
		k=1;
		while pretotal < size(data,1)*2/3 &&  k<K      
		%@有2/3的数据符合拟合模型或达到最大迭代次数就可以退出了，@
		%@size(data,1)返回data的行数@
		SampIndex=floor(1+ size(data,1)*rand(2,1));  %@产生两个随机索引，范围(0,7)找样本用，@
		%@floor向下取整,保证取出的数在1~6之间@
		
		samp1=data(SampIndex(1),:);     %@对原数据随机抽样两个样本@
		samp2=data(SampIndex(2),:);
		
		line=DistaF([samp1;samp2]);   %@对两个数据拟合出直线@
		%@或其他变种拟合方法@
		mask=abs(line*[data ones(size(data,1),1)]');    %@求每个数据到拟合直线的距离@
		total=sum(mask<sigma);              %@计算数据距离直线小于一定阈值的数据的个数@
		
		if total>pretotal            %@找到符合拟合直线数据最多的拟合直线@
		pretotal=total;
		bestline=line;          %@找到最好的拟合直线@
		end  
		k=k+1;
		end
		
		%@显示符合最佳拟合的数据@
		mask=abs(bestline*[data ones(size(data,1),1)]')<sigma;    
		hold on;
		for i=1:length(mask)
		if mask(i)
		stem(data(i,1),data(i,2),'fill');
		end
		end
		%@画出最佳拟合曲线@
		xAxis = 1:6;
		yAxis =  (-bestline(1)*xAxis - bestline(3) )/bestline(2);
		plot(xAxis, yAxis,'r-','LineWidth',2);
		\end{lstlisting}
 \newpage
 \section{RSA算法实现}
 	\subsection{参数选取以及运行结果}
 	选取$p=9973,q=9967,e=9929$，得到公钥$(n,e)=(99400891,9929)$以及私钥$(n,d)=(99400891,96007865)$ \par
 	姓名$wanghaotong$对应的明文信息为\,$\underline{2201}$\,$\underline{3670}$\,$\underline{1419}$\,$\underline{1413}$\,$\underline{6000}$(每四个数字为一组) \par
 	加密后的密文为\,$\underline{83591545}$\,$\underline{3634369}$\,$\underline{8133690}$\,$\underline{73981507}$\,$\underline{67754900}$ \par
 	经过RSA算法解密后的明文与原明文一致(代码中体现)
 	\lstset{language=C++,numbers=left,frame=shadowbox,  
 		, breaklines=true,escapechar=@}
 	\subsection{C++代码}
 	\begin{lstlisting}
 	#include <iostream>
 	using namespace std;
 	long long f;
 	void exgcd(long long a,long long b,long long &x,long long &y)
 	{                                                                                //@扩展欧几里得算法@
 	if(b==0)
 	{
 	x=1;
 	y=0;
 	f=a;    //@f为求出来的a,b的最小公约数@
 	}
 	else
 	{
 	exgcd(b,a%b,x,y);
 	long long t=x;
 	x = y;
 	y = t - (a /b )* y;
 	}
 	
 	}
 	int findd(long long a,long long b)
 	{
 	long long x,y;
 	exgcd(a,b,x,y);
 	x=x/f;
 	long long r=b/f;
 	x=(x%r+r)%r;     //@求解的最小值@
 	return x;
 	}
 	int main()
 	{
 	long long p,q,e,n,n1,d;
 	long long ming,a=1,b=1;
 	cout<<"@请任选两个四位的素数和一个三位或者四位的素数@"<<endl;
 	cin>>p>>q>>e;
 	n=p*q;
 	n1=(p-1)*(q-1);
 	d=findd(e,n1);
 	cout<<"@公钥@(n,e)@为@"<<"("<<n <<","<<e<<")"<<endl;
 	cout<<"@私钥@(n,d)@为@"<<"("<<n <<","<<d<<")"<<endl;
 	cout<<"@请输入要加密的内容@"<<endl;
 	cin>>ming;
 	for(int i=1;i<=e;i++)
 	{
 	a=a*ming%n;
 	}
 	cout<<"@密文是@"<<a<<endl;
 	for(int j=1;j<=d;j++)
 	{
 	b=b*a%n;
 	}
 	cout<<"@解出的明文是@"<<b<<endl;
 	return 0;
 	}
 	
 	
 	\end{lstlisting}
 	\newpage
 	\section{几何学感想}
 	\zihao{-4}
 几何学简称几何。几何学是数学的一个基础分支，主要研究形状、大小、图形的相对位置等空间区域关系以及空间形式的度量。从历史来看，几何的发展经历了几个重大的进展与突破：公元前三世纪，产生的欧几里得几何是往后几个世纪的几何学标准，勒内·笛卡儿发明的坐标系与代数逐渐的结合，引入微积分，透视投影理论的成熟，拓扑学及微分几何的产生，非欧几何的发展与成熟……\\
 	\indent
 	在欧几里德的时代，实际空间和几何空间之间没有明显的区别，但自从十九世纪发现非欧几何后，空间的概念有了大幅的调整，也开始出现哪一种几何空间最符合实际空间的问题。在二十世纪形式数学兴起以后，空间（包括点、线、面）已没有其直观的概念在内。今日需要区分实体空间、几何空间（点、线、面仍没有其直观的概念在内）以及抽象空间。当代的几何学考虑流形，空间的概念比欧几里德中的更加抽象，两者只在极小尺寸下才彼此近似。这些空间可以加入额外的结构，因此可以考虑其长度。近代的几何学和物理关系密切，就像伪黎曼流形和广义相对论的关系一样。物理理论中最年轻的弦理论也和几何学有密切关系。
 	\indent
 	首先，从我们熟悉的空间入手，零维空间是一个点，一维空间是一条线，二维空间是一个面，而仅仅在一个二维空间上，我们可以定义直角坐标系，仿射坐标系去将二维的图形代数化去研究它们的性质：例如圆，椭圆等等；而且借助直角坐标系，我们又可以定义各种各样的映射去研究各种各样的函数；再来看三维的空间，这是人类有切实感受的空间，对于一只苍蝇来说，它可以沿任何方向飞行。既可以沿一条衣线爬行，又可以在玻璃板面上朝任何方向爬行，还可以飞离此玻璃板面。那我们人类所居住的从事各种各样活动的世界究竟是几维世界？\\
 	\indent
 	上个世纪初期，科学家爱因斯坦根据他所创立的相对论，认为整个宇宙是一个三维空间和一维时间的时空连续区。一切实在的东西都同时存在于空间和时间中，而空间和时间是不可分割的。又于上个世纪，华东化工学院理论物理研究所李新洲等教授证明了：宇宙四维可测性的几率几乎接近于1，而大于或小于四维的几率则等于零，因而人们所观察到的宇宙必是四维的。既然宇宙是四维的，那么四维空间便成为当下的一个研究的热点。而类比三维空间，我们也可以获得很多在四维空间成立的结论，例如：在三维空间中，过一点同时相互垂直的直线有三条。经过类比，我们可以得到，在四维空间中，过一点同时相互垂直的直线有四条。另一方面，四维空间几何学有不少事实同人们所习惯的三维空间经验想违背。例如，我们可以从三维空间的任一点进入四维空间而不必经过或触及三维空间的任意其它点。正如一只蚂蚁可以从球面的中心点出发沿一条垂直三维空间的直线移动离开而不必触及球面的任一点。那么，一份人很难想象密封在玻璃药瓶内的药丸在不打开药瓶也不打破药瓶的情况下被取出来。因为在三维空间内确实是不可能的。然而，在四维空间内，药丸确实可以沿着一条垂直三维空间的直线移动而离开密封它的药瓶。更一般得来说，完全封闭在三维空间一曲面内的对象可以沿此空间以外的任意方向自由地移动，离开封闭曲面。\\
 	\indent
 	对于当下世界最好的描述便是建立在欧式几何的三维欧式空间。而在欧式几何中有一个著名的平行公理，它在有限范围有相对真理的性质，但是人们还不能证明在无穷远处的空间将是一种什么样子。在对这个公理的质疑中，诞生了两个另外的空间——罗氏几何，黎氏几何。在罗氏几何中，三角形三个内角和小于$180^\circ$；而黎氏几何设定空间是弯曲的，且过已知直线外一点不能作出任何直线与已知直线共面而不想交，这样便又建立了一套公理化体系，同时，在黎氏几何中，三角形的三个内角和大于$180^\circ$。罗氏几何和黎氏几何相对于欧式几何统称为非欧几何学（或者星空几何学）。而且现代科学确已证明非欧几何学在物理以及相对论中有很重要的应用。宇宙航行和准确测定星球的位置就要用到它，而且实践证明非欧几何较之欧式几何更切合实际。\\
 	\indent
 	在进入大学之前，学生的研究对象更多在于初等几何，即是研究不变的图形，而高等几何则是在研究变动的图形，即图形的变换。如电影放映机把影片上的图像照映在荧幕上，图像的大小变了，但各部分之间的比例关系不变，这种变换叫仿射变换。研究仿射变换中图形的不变性质和不变量的科学叫仿射几何学。又如绘制世界地图，在地球外面包一个圆柱面，地球的中心放一盏灯，把球面上的图形投影到圆柱面上，这种变换叫中心射影变换，简称射影变换。研究射影变换中图形的不变形和不变量的科学叫射影几何学。\\
 	当人们得知到多种几何及其性质以后，自然会想到它们有哪些共性，是否存在一种几何空间，它具有最基本的性质，这些性质为其它几何所共有，这种最广泛的几何空间叫拓扑空间。在此空间中的几何学叫做拓扑学。通俗地讲，拓扑学是研究连性质的一门科学。有一种比射影变换更广泛的变换叫拓扑变换。经过这种变换，一个圆可以变成任意形状的封闭曲线，一个球面可以变成任意形状的封闭曲面。但是有一点不变，即远近关系不变。相距很近的点不可能一下子变到相距很远，即图形的连性质不变。这种研究拓扑空间中图形在拓扑变换下的不变性质和不变量的科学叫拓扑学。有人形象地称之为“橡皮几何”。因为许多自然现象都带有连续性质，如植物的连续生长，流体的连续流动，气温的连续变化等等，所以不难想象拓扑学在实际中有广泛应用的可能性。\\
 	\indent
 	经过一代代数学家们的努力，几何学成为数学百花园中一颗璀璨的明珠，越发绽放出夺目的光彩。通过实习过程中老师的讲解以及可课下对于几何的了解，我觉得几何学具有较强的直观效果，与现实生活有较强的联系（欧式几何），利于人们对于几何学感性上的认识，并在几何学中找到实际生活中的参考。并且，几何学可以更好地培养人的逻辑思维能力（拓扑学就有高度的抽象性）和空间想象能力（在实际中往往需要把低维空间中本质规律科学地、合乎逻辑地推广到高维空间中去），最后，几何学具有深刻的美学内涵（分形等等），它是数学美的一部分，具有广泛的应用。研究几何学可把人带入更高的境界。在欣赏几何学内在美的同时，由于几何学与其他数学分支的交融又可以欣赏到其他数学分支的内在美。
 	\newpage
 	\section{模糊控制及其应用}
 	\begin{center}
 		\kaishu 报告小组成员：王浩同、苑婉秋、仝树、吕元玮、张九斤
 	\end{center}
 	\subsection{模糊控制概述}
 		\subsubsection{定义}
 		模糊控制，顾名思义，利用模糊数学的基本思想和理论的控制方法。在传统的控制领域里，控制系统动态模式的精确与否是影响控制优劣的最主要关键，系统动态的信息越详细，则越能达到精确控制的目的。然而，对于复杂的系统，由于变量太多，往往难以正确的描述系统的动态，于是工程师便利用各种方法来简化系统动态，以达成控制的目的，但却不尽理想。换言之，传统的控制理论对于明确系统有强而有力的控制能力，但对于过于复杂或难以精确描述的系统，则显得无能为力了。因此便尝试着以模糊数学来处理这些控制问题。
 		\subsubsection{发展历程}
 		模糊控制的真正开拓者是英国伦敦大学的E.H.Mamdani教授,1974年他研制了第一个工业应用的模糊控制系统—蒸气发动机自动运行实验装置,1980年实用化的模糊控制系统在 丹麦的F.L.s midth水泥厂的水泥窑中投入运行。与此同时日本的一些企业也参与了模糊 控制系统的开发,例如日立制作所的列车模糊控制自动运行系统，富士电机集团的净水厂 药剂添加模糊控制等都获得了成功。 \par
 		随后,从1986年起,日本企业界掀起了模糊控制研究开发的热潮,各种模糊计算机、模糊控 制器相继问世,模糊控制从工业控制扩展到了空调机、洗衣机等家电设备.同时大力开展了 人与机械、人与社会等的模糊系统的开发研究.在我1981年成立了“中国模糊数学与系统学会”,并出版了《模糊数学》杂志,后更名为《模糊系统与数学》.1988年7月,国家自然科学基金委员会设立了“模糊信息处理和智能机器”的研究课题,北师大、川大、国防科大及电子科学研究院等16所大学与院所参与了本课题的研究.1989年3月国家经济计划委 员会得到了世界银行的资金援助,在北师大设立了“模糊信息处理和模糊计算机”研究的专 门研究室.到目前为止,在我国有不下百例的模糊系统实用化。其中与控制有关的如太原3 号高炉冶炼模糊控制,乙烯生产专用模糊控制器等,都在生产实践中取得了良好的效果.与 此同时,世界各国与模糊系统有关的学术组织及国际组织相继成立.如1989年成立的国际 模糊系统学会(IFsA),1989年成立的日本模糊系统学会s(OFT)都在积极研究模糊理论中未解决的课题和开发模糊控制等实用化模糊技术。 \par
 		\subsubsection{模糊控制的特点}
 		现代化生产的特点是大规模化和复杂化,这就要求生产过程实现高度自动化。复杂生产过程的控制采用以数学模型为基础的经典的或现代控制理论方法难以取得良好的效果,一是有的过程建立数学模型要花费很长的时间和较大的投资,而且建立的模型不一定完全符合 过程的真实情况.有的过程因变化参数多、外界干扰大、过程特性变化也大,根本无法建立 数学模型.因此以语言模型为基础的人工智能(Al)型的控制技术受到了极大的重视,尤其 是近几年来,在使用传统的控制技术难以实现控制的工业过程中,引人了专家诀窍和现场熟 练操作人员的经验和操作方法等符合人类思维的模糊控制,并得到了越来越广泛的应用。模糊控制有如下特点:\par
 		1.不斋要数学模型就可以记述控制规律,特别是适合于难以数学模型表示的生产过程的控制,较之数学模型简单明了;\par
 		2.对评价要素多的多变量过程,可以简单地进行统一处理;\par
 		3.对非线性系统可以不考虑非线性特性并能进行处理;\par
 		4.对大滞后过程可通过预测规则,容易实现模式化;\par
 		5.对特别复杂的过程可采用多级推理方法,进行状态空间分割,实现柔性控制;\par
 		6.模糊控制中隶属函数的边界部分,可以吸收某种程度的干扰,提高控制的可靠性;\par
 		7.可以防止人为的错误等。\par
 		\subsubsection{模糊理论}
 		模糊集、模糊逻辑和模糊推理是模糊理论的基础。\par
 		1.模糊集：设$A$是集合$X$到$[0,1]$的一个映射，$A$：$X$ $\to$ $[0,1]$，$x$ $\to$ $A(x)$, 则称$X$是$A$上的模糊集，$A(x)$称为模糊集$A$的隶属函数，或称$A(x)$为$x$对模糊集$A$的隶属度。用来表达模糊性概念的集合。 又称模糊集、模糊子集。普通的集合是指具有某种属性的对象的全体。这种属性所表达的概念应该是清晰的，界限分明的。因此每个对象对于集合的隶属关系也是明确的，非此即彼。但在人们的思维中还有着许多模糊的概念，例如年轻、很大、暖和、傍晚等，这些概念所描述的对象属性不能简单地用“是”或“否”来回答，模糊集合就是指具有某个模糊概念所描述的属性的对象的全体。由于概念本身不是清晰的、界限分明的，因而对象对集合的隶属关系也不是明确的、非此即彼的。这一概念是美国加利福尼亚大学控制论专家L.A.扎德于 1965 年首先提出的。模糊集合这一概念的出现使得数学的思维和方法可以用于处理模糊性现象，从而构成了模糊集合论（中国通常称为模糊性数学)的基础。
 		\par
 		2.模糊逻辑：模糊逻辑指模仿人脑的不确定性概念判断、推理思维方式，对于模型未知或不能确定的描述系统，以及强非线性、大滞后的控制对象，应用模糊集合和模糊规则进行推理，表达过渡性界限或定性知识经验，模拟人脑方式，实行模糊综合判断，推理解决常规方法难于对付的规则型模糊信息问题。模糊逻辑善于表达界限不清晰的定性知识与经验，它借助于隶属度函数概念，区分模糊集合，处理模糊关系，模拟人脑实施规则型推理，解决因“排中律”的逻辑破缺产生的种种不确定问题 。 \par
 		3.模糊推理：从不精确的前提集合中得出可能的不精确结论的推理过程，又称近似推理。在人的思维中，推理过程常常是近似的。例如，人们根据条件语句（假言）“若西红柿是红的”，则西红柿是熟的”和前提（直言）“西红柿非常红”，立即可得出结论“西红柿非常熟”。这种不精确的推理不可能用经典的二值逻辑或多值逻辑来完成。L.A.扎德于1975年首先提出模糊推理的合成规则和把条件语句“若$x$为$A$，则$y$为$B$”转换为模糊关系的规则。此后J.F.鲍德温和R.R.耶格尔等人又各自采用带有模糊真值的模糊逻辑而提出了不同于扎德的方法。
 		\subsubsection{相关应用}
 		模糊控制从工业过程控制、机械设备控制，扩大到了家电产品的控制，甚至涉足到航空、航天等领域。这些不同的控制对象所需要的推理速度和控制规则数均不相同。模糊控制的应用实例有很多。例如模糊推理芯片，专用模糊芯片，数字模糊处理器，微型机和可编程序控制器构成的模糊控制系统。
 		实例：模糊控制系统总体设计 
 		对退火炉燃烧过程的控制，要求维持稳定的温度以保证钢材退火质量。最佳燃烧过程取决于燃料和空气的比例。根据统计分析，燃烧过程中空气过剩率μ= 1.02～1.10时热效率最高。在燃烧过程中，控制系统应当通过控制燃油和空气的比例来保持最佳的燃烧状态。此外，炉膛内的压力是随工作情况而变化，而炉压又影响炉温，因此，要维持稳定的炉温,还需对炉膛内的压力进行调节。保持适当的炉膛压力，以提高热效率，延长窑炉的寿命。综上所述，要保证退火温度，实现最佳燃烧过程，控制系统应包括以下三个组成部分：
 		①温度-燃油/空气流量调节回路；②燃油/空气最佳比例调节回路；③炉膛压力调节回路。 
 		采用自寻优模糊控制器的退火炉燃烧过程控制系统如图1所示。图中FPC为炉压模糊控制器；FTC为温度模糊控制器,它根据温度信号对油量和风量进行调节；FAC为油/风比模糊控制自寻优控制器，它不断发出试探信号，通过对燃油量的测量，搜索最佳油/风比。燃料/空气控制采用并行结构。
 		\subsubsection{小结}
 		在模糊控制的发展初期，大多数学者的主要精力放在模糊控制的应用研究上，在很多领域取得辉煌的成果。但与应用的成果相比，模糊控制的系统分析和理论研究却没有显著进展，以至于西方的一些学者对模糊控制的理论依据和有效性产生疑虑。1993年7月，在美国第十一届人工智能年会上，加州大学圣地亚哥分校计算机科学和工程系助教授Clarles Elkan博士的一篇题为“模糊逻辑似是而非的成功”报告，就代表了这种思想。虽然C.Elkan 的一些观点是不确切和片面的，会后很多专家对此进行了批驳，但他确确实实指出了模糊控制理论基础不够坚实的缺点，从而引起了模糊控制领域的学者的广泛关注并加强了对这一方面的研究。目前模糊控制的理论研究很热，并已取得了许多显著进展，模糊控制在理论上和应用方面都取得了巨大成就。虽然模糊控制技术发展历史只有三十年，本身还有待于完善，理论与实际的结合也有待于进一步探索，但是其发展前景十分诱人。 \par
 		目前在国际大趋势的推动下，模糊控制已开始向多元化和交叉学科方向发展。国外专家预言：模糊技术、神经网络技术、混沌理论作为人工智能的三大支柱，将是下一代工业自动化的基础。随着模糊控制理论研究的不断完善和应用的广泛深入、高性能模糊控制器的研究开发，模糊控制技术将会更大限度地发挥其优势，为工业过程控制、运动控制和其它领域的控制开辟新的应用前景。
 	\subsection{MATLAB在模糊控制系统仿真中的应用}
 	\subsubsection{模糊逻辑工具箱介绍}
 	Matlab自带的FUZZY \, LOGIC \,TOOLBOX 提供了两种来建立模糊逻辑控制系统，即命令行方式和用户图形界面方式。而用户图形界面更为友好，下文将介绍图形用户界面。 \par
 	模糊逻辑工具箱提供了五个基本的交互式图形界面来设计和完成模糊逻辑控制系统，它们分别为：\\
 	(1)模糊推理系统编辑器 \par
 	该编辑器用于设计和显示模糊推理膝盖痛的一些基本信息与参数，如：推理系统的名称，输入、输出变量的个数和名称，模糊推理系统的类型，解模糊方法等。其中，模糊推理系统可以采用Mamdani或Sugeno两种类型，解模糊方法有最大隶属度法、中位数法、加权平均法等几种。\\
 	(2)隶属函数编辑器 \par
 	改函数编辑器提供了一个友好的人机图形交互环境，用来设计、修改模糊推理系统中各语言变量对应的隶属函数的相关参数，如隶属函数的形状、范围，以及论域大小等。系统提供的隶属函数有三角形、梯形、高斯形、钟形等等，而且用户还可以自定义。\\
 	(3)规则编辑器\par
 	通过该编辑器来设计和修改“IF$\cdots$ Then”形式的模糊控制规则(专家经验)。由该编辑器进行模糊控制规则的制定非常方便，它将输入量的各语言变量自动匹配，而设计者只需通过交互式的图形环境选择相应的输出语言变量，这就大大简化了规则的设计和修改。\\
 	(4)规则查看器 \par
 	规则查看器用于显示各条模糊控制规则 对应的输入量和输出量的隶属函数。通过指定输入量，可以直观地显示所采用的控制规则，以及通过模糊推理得到相应输出量的过程，以便对模糊规则进行修改和优化。\\
 	(5)表面查看器 \par	
 	该查看器用于显示输入、输出量对应的表面空间，并可改变各轴对应的变量及观察的视角，便于用户对设计的模糊推理系统进行修改和优化。\par
 	在命令行输入$fuzzy$，可直接创建一个新的模糊推理系统编辑器。
 	\subsubsection{Matlab仿真程序说明}
 	该程序(matlab)为模糊控制的初学者了解模糊控制中隶属度函数以及对于获取模糊控制表提供了很好的一个典范，而整个程序的功能就是起到模糊控制器的作用。关于模糊控制(fuzzy control)器，首先要结局的问题是，把确定的量的转换成相应的模糊量(见程序中的隶属度函数建立过程)，其次是形成模糊控制规则库(见程序的49条规则)，最后就是实现模糊输出量的接模糊判决，程序即通过获取模糊控制表的方法，实现解模糊判决及实现模糊化输出量。具体解释就是，在涉及模糊控制器(这里及matlab程序功能)之前，先设立偏差值$e$，$e$为具体的量(或数值)，$e$经过隶属度函数的作用，输出即为模糊的量，这样被控对象(及模糊获取列表)在模糊控制器的作用后会被反馈到与最初始的偏差比较，完成模糊量到数字量的解模糊华过程。
 	\subsubsection{程序运行结果}
 	\begin{figure}[H]
 		\centering
 		\subfigure[模糊控制器结构] 
 		{\includegraphics[width=6cm]{mo1.jpg}}
 		\subfigure[输入量e的隶属度函数] 
 		{\includegraphics[width=6cm]{mo2.jpg}} \\
 		\subfigure[输入量ec的隶属度函数] 
 		{\includegraphics[width=6cm]{mo3.jpg}} 
 		\subfigure[输出量u的隶属度函数] 
 		{\includegraphics[width=6cm]{mo4.jpg}} 
 		\label{guiFig}
 	\end{figure}
 	此模糊控制器由输入量$e,ec$与输出量$u$组成，其隶属函数为$7$个，论域范围为$[-3,3]$,模糊规则有$49个$
 	\lstset{language=Matlab,numbers=left,frame=shadowbox,  
 		, breaklines=true,escapechar=@}
 	\subsubsection{Matlab代码}
 	\begin{lstlisting}
 	%Fuzzy Controller
 	%@常规模糊控制程序@
 	clear all;
 	close all;
 	
 	a=newfis('fuzzf');
 	
 	f1=1;    %@建立模糊输入误差e的隶属度函数@
 	a=addvar(a,'input','e',[-3*f1,3*f1]);            %Parameter e
 	a=addmf(a,'input',1,'NB','zmf',[-3*f1,-1*f1]);
 	a=addmf(a,'input',1,'NM','trimf',[-3*f1,-2*f1,0]);
 	a=addmf(a,'input',1,'NS','trimf',[-3*f1,-1*f1,1*f1]);
 	a=addmf(a,'input',1,'Z','trimf',[-2*f1,0,2*f1]);
 	a=addmf(a,'input',1,'PS','trimf',[-1*f1,1*f1,3*f1]);
 	a=addmf(a,'input',1,'PM','trimf',[0,2*f1,3*f1]);
 	a=addmf(a,'input',1,'PB','smf',[1*f1,3*f1]);
 	
 	f2=1;     %@建立模糊输入误差ec的隶属度函数@
 	a=addvar(a,'input','ec',[-3*f2,3*f2]);          %Parameter ec
 	a=addmf(a,'input',2,'NB','zmf',[-3*f2,-1*f2]);
 	a=addmf(a,'input',2,'NM','trimf',[-3*f2,-2*f2,0]);
 	a=addmf(a,'input',2,'NS','trimf',[-3*f2,-1*f2,1*f2]);
 	a=addmf(a,'input',2,'Z','trimf',[-2*f2,0,2*f2]);
 	a=addmf(a,'input',2,'PS','trimf',[-1*f2,1*f2,3*f2]);
 	a=addmf(a,'input',2,'PM','trimf',[0,2*f2,3*f2]);
 	a=addmf(a,'input',2,'PB','smf',[1*f2,3*f2]);
 	
 	f3=1.5;     %@建立模糊输出u的隶属度函数@
 	a=addvar(a,'output','u',[-3*f3,3*f3]);          %Parameter u
 	a=addmf(a,'output',1,'NB','zmf',[-3*f3,-1*f3]);
 	a=addmf(a,'output',1,'NM','trimf',[-3*f3,-2*f3,0]);
 	a=addmf(a,'output',1,'NS','trimf',[-3*f3,-1*f3,1*f3]);
 	a=addmf(a,'output',1,'Z','trimf',[-2*f3,0,2*f3]);
 	a=addmf(a,'output',1,'PS','trimf',[-1*f3,1*f3,3*f3]);
 	a=addmf(a,'output',1,'PM','trimf',[0,2*f3,3*f3]);
 	a=addmf(a,'output',1,'PB','smf',[1*f3,3*f3]);
 	
 	rulelist=[1 1 1 1 1;         %Edit rule base @建立模糊规则库，共49条规则@
 	1 2 1 1 1;
 	1 3 2 1 1;
 	1 4 2 1 1;
 	1 5 3 1 1;
 	1 6 3 1 1;
 	1 7 4 1 1;
 	
 	2 1 1 1 1;
 	2 2 2 1 1;
 	2 3 2 1 1;
 	2 4 3 1 1;
 	2 5 3 1 1;
 	2 6 4 1 1;
 	2 7 5 1 1;
 	
 	3 1 2 1 1;
 	3 2 2 1 1;
 	3 3 3 1 1;
 	3 4 3 1 1;
 	3 5 4 1 1;
 	3 6 5 1 1;
 	3 7 5 1 1;
 	
 	4 1 2 1 1;
 	4 2 3 1 1;
 	4 3 3 1 1;
 	4 4 4 1 1;
 	4 5 5 1 1;
 	4 6 5 1 1;
 	4 7 6 1 1;
 	
 	5 1 3 1 1;
 	5 2 3 1 1;
 	5 3 4 1 1;
 	5 4 5 1 1;
 	5 5 5 1 1;
 	5 6 6 1 1;
 	5 7 6 1 1;
 	
 	6 1 3 1 1;
 	6 2 4 1 1;
 	6 3 5 1 1;
 	6 4 5 1 1;
 	6 5 6 1 1;
 	6 6 6 1 1;
 	6 7 7 1 1;
 	
 	7 1 4 1 1;
 	7 2 5 1 1;
 	7 3 5 1 1;
 	7 4 6 1 1;
 	7 5 6 1 1;
 	7 6 7 1 1;
 	7 7 7 1 1];
 	
 	a=addrule(a,rulelist);   @设置反模糊化函数@
 	%showrule(a)                        % Show fuzzy rule base
 	
 	a1=setfis(a,'DefuzzMethod','mom');  % Defuzzy
 	writefis(a1,'fuzzf');               % save to fuzzy file "fuzzf.fis" which can be
 	% simulated with fuzzy tool   
 	a2=readfis('fuzzf');
 	
 	disp('fuzzy controller table:e=[-3,+3],ec=[-3,+3]');
 	Ulist=zeros(7,7);
 	
 	for i=1:7
 	for j=1:7
 	e(i)=-4+i;
 	ec(j)=-4+j;
 	Ulist(i,j)=evalfis([e(i),ec(j)],a2);
 	end
 	end
 	
 	Ulist=ceil(Ulist)
 	
 	figure(1);
 	plotfis(a2);
 	figure(2);
 	plotmf(a,'input',1);
 	figure(3);
 	plotmf(a,'input',2);
 	figure(4);
 	plotmf(a,'output',1);
 	\end{lstlisting}
 	\newpage
 	\section{基于KNN思想，使用局部线性回归估计函数关系}
 	\subsection{KNN与局部线性回归}
 	KNN(K Nearest Neighbor)的核心思想是在某一个预测值旁选取$k$个最邻近的点（使用欧式距离来衡量），使用它们的平均值或者是加权平均值作为此预测值。而如果我们想得到某些观测点的一个光滑的估计，那么我们可以使用一个光滑的权重的函数，成为核函数（Kernel Function），本题中采用的是高斯核函数
 	\[
 	K(u)=\frac{1}{\sqrt{2\pi}}exp(-\frac{u^2}{2})
 	\]
 	上式就是著名的高斯核函数，它可以用来做一个权重函数，因为距离$x$越近的点$K$越大，反之越小。核函数$K$决定影响的形状，故在$K$限定的形状内会有若干个点会对$x$估计有影响，符合了KNN的核心思想。但不足的是，局部线性回归每个预测点处对实例$x$有影响的观测点可能不固定。
 	\subsection{程序运行结果}
 	\begin{figure}[H]
 		\centering
 		\includegraphics[scale=0.5]{knn.jpg}
 		\caption{x-y}
 	\end{figure}
 	图中离散的点为原始数据，波动的曲线为估计的函数。
 		\lstset{language=Matlab,numbers=left,frame=shadowbox,  
 			, breaklines=true,escapechar=@}
 		\subsection{Matlab代码}
 			\begin{lstlisting}
 			% @局部加权线性回归算法@(LWR/LOESS)  
 			clc;  
 			clear all;
 			close all;  
 			%@载入数据@   
 			load('data.mat');  
 			x=data(:,1:2);  
 			y=data(:,3);  
 			%%  
 			m=size(x,1);%@样本数@  
 			n=size(x,2);%@特征维数@  
 			k=0.005;  
 			w=zeros(m,m);  
 			theta=zeros(n,m);  
 			for i=1:m  
 			for j=1:m  
 			w(j,j)=exp(-((x(i,2)-x(j,2))^2)/(2*k^2));  
 			end  
 			theta(:,i)=((x'*w*x)\x')*w*y;  
 			end  
 			figure;  
 			plot(x(:,2),y,'r.');%@原始数据@  
 			hold on;  
 			y_fit=x*theta;  
 			y=diag(y_fit);  
 			data(:,1:2)=x;  
 			data(:,3)=y;  
 			data=sortrows(data,2);  
 			x=data(:,1:2);  
 			y=data(:,3);  
 			plot(x(:,2),y);    
 			\end{lstlisting}
 	\section{基于Matlab的混沌系统仿真与分析}
 	 \subsection{问题重述}
 	 \noindent
 	 化学动力学过程：
 	 
 	 \begin{equation}
 	 \begin{cases}
 	 \dot{x}=x(a_1-k_1x-z-y)+k_2y+a_3 \\
 	 \dot{y}=y(x-k_2-a_5)+a_3\\
 	 \dot{z}=z(a_4-x-k_5z)+a_3
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 当$k_1=0.25,k_2=10^{-8},k_3=0.5,a_1=30,a_2=a_3=10^{-8},a_4=16.5,a_5=10$时出现混沌。分析其非线性动力学行为。
 	 
 	 \subsection{平衡点稳定性分析}
 	 \begin{thm1}
 	 	\begin{equation}
 	 	\text{设有驻定方程组}
 	 	\begin{cases}
 	 	\frac{\mathrm{d}x}{\mathrm{d}t}=X(x,y)\\
 	 	\frac{\mathrm{d}y}{\mathrm{d}t} = Y(x,y) \nonumber
 	 	
 	 	\end{cases}
 	 	\text{称同时满足}X(x,y)=0,
 	 	Y(x,y)=0 \text{的点}
 	 	\end{equation}
 	 	$(x^{*},y^{*})$
 	 	为方程组的奇点 \\
 	 	对于$n$阶非线性微分方程组
 	 	
 	 	
 	 	
 	 	$$\frac{\mathrm{d}x}{\mathrm{d}t}= Ax+R(x) \eqno{(1)}
 	 	$$
 	 	
 	 	其中$R(0)=0$。显然$x=0$是方程组 的解。 \\
 	 	若方程组满足条件$ \left\| \frac{R(x)}{x} \right\|\to 0 $
 	 	\,
 	 	(当$\left\| x \right\| \to 0$时)，则称线性方程
 	 	\[
 	 	\frac{\mathrm{d}x}{\mathrm{d}t}=Ax   \eqno{(2)}
 	 	\]为方程组的线性近似方程组。\\
 	 	线性近似方程组的系数矩阵$A$的特征方程为
 	 	\[
 	 	det(A-\lambda E)=0 \eqno{(3)}
 	 	\]
 	 \end{thm1}
 	 \begin{thm1}
 	 	若特征方程(3)没有零根或零实部的根，则非线性方程组的零解稳定性与其线性近似方程组的零解的稳定性是一致的。\\
 	 	若特征方程的根均具有负实部，则方程组的零解是渐稳近稳定的;
 	 	\\若特征方程的根具有正实部的根，方程组的零解是不稳定的。
 	 	
 	 \end{thm1}
 	 对于此化学动力学过程
 	 \begin{equation}
 	 \begin{cases}
 	 \dot{x}=x(a_1-k_1x-z-y)+k_2y+a_3 \\
 	 \dot{y}=y(x-k_2-a_5)+a_3\\
 	 \dot{z}=z(a_4-x-k_5z)+a_3
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 代入参数，解方程组
 	 \begin{equation}
 	 \begin{cases}
 	 x(a_1-k_1x-z-y)+k_2y+a_3=0 \\
 	 y(x-k_2-a_5)+a_3=0\\
 	 z(a_4-x-k_5z)+a_3=0
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 得
 	 \begin{equation}
 	 \left\{{
 	 	\begin{array}{l}
 	 	{x=10} \\ {y=0}
 	 	\\{z=13}
 	 	\end{array}}
 	 \right.,
 	 \nonumber
 	 \end{equation}
 	 方程组的一个奇点为$(10,0,13)$\\
 	 现讨论驻定解$(10,0,13)$的稳定形态\\
 	 \begin{equation}
 	 \text{令}
 	 \begin{cases}
 	 X=x-10 \\ Y=y\\Z=z-13
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 将原方程组化为
 	 \begin{equation}
 	 \begin{cases}
 	 \frac{\mathrm{d}X}{\mathrm{d}t}=-0.25X^2-XY-XZ+48X+10Y+10Z-455
 	 \\
 	 \frac{\mathrm{d}Y}{\mathrm{d}t}= XY -Y^2\times10^{-8}-20Y+10^{-8}\\
 	 \frac{\mathrm{d}Z}{\mathrm{d}t}= -XZ+13X-0.5Z^2+39.5Z-429
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 一次近似方程为
 	 \begin{equation}
 	 \begin{cases}
 	 \frac{\mathrm{d}X}{\mathrm{d}t}=48x+10y+10z
 	 \\
 	 \frac{\mathrm{d}Y}{\mathrm{d}t}=-20Y \\
 	 \frac{\mathrm{d}Z}{\mathrm{d}t}=13X+39.5Z
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 有负实部的特征根$\lambda_1=55.8213 ,\lambda_2=31.3787,\lambda_3=-20$，由引理2可知方程组的解是不稳定的。\\
 	 其余奇点也可按此方法去讨论稳定性。
 	 \subsection{混沌图，时域波形图，分叉图}
 	 \begin{figure}[H]
 	 	\centering
 	 	\subfigure[xyz三维空间相图] 
 	 	{\includegraphics[width=4cm]{hun1.jpg}}
 	 	\subfigure[xy平面相图] 
 	 	{\includegraphics[width=4cm]{hun2.jpg}}
 	 	\label{guiFig}
 	 \end{figure}
 	 
 	 \begin{figure}[H]
 	 	\centering
 	 	\subfigure[xz平面相图] 
 	 	{\includegraphics[width=4cm]{hun3.jpg}}
 	 	\subfigure[yz平面相图] 
 	 	{\includegraphics[width=4cm]{hun4.jpg}}
 	 	
 	 	\label{guiFig}
 	 \end{figure}
 	 
 	 \begin{figure}[H]
 	 	\centering
 	 	\subfigure[Lorenz映射分岔图] 
 	 	{\includegraphics[width=4cm]{hun5.jpg}}
 	 	\subfigure[ 时域波形图] 
 	 	{\includegraphics[width=4cm]{hun6.png}}
 	 	\label{guiFig}
 	 \end{figure}
 	 \lstset{language=Matlab,numbers=left,frame=shadowbox,  
 	 	, breaklines=true,escapechar=@}
 	 \subsection{Matlab代码}
 	 \begin{lstlisting}
 	 function f=chao_SimpleLorenz(t,y)
 	 
 	 global c
 	 
 	 f=zeros(3,1);
 	 f(1)=y(1)*(30-0.25*y(1)-y(3)-y(2))+0.00000001*y(2)+0.00000001;
 	 f(2)=y(2)*(y(1)-0.00000001*y(2)-10)+0.00000001;
 	 f(3)=y(3)*(16.5-y(1)-0.5*y(3))+0.00000001
 	 clc
 	 
 	 clear
 	 
 	 global c
 	 
 	 c=2;
 	 
 	 [T,Y]=ode45(chao_SimpleLorenz,0:0.01:500,[1 2 3 ]);
 	 
 	 figure
 	 
 	 plot(Y(30000:end,2),Y(30000:end,3))
 	 
 	 xlim([0 30])
 	 
 	 %xlabel('\itx')
 	 
 	 %ylabel('\itz')
 	 %plot3(Y(30000:end,1),Y(30000:end,2),Y(30000:end,3))
 	 
 	 %zlabel('\itz')
 	 function dy = Lorenz(t,y)
 	 
 	 dy=zeros(6,1);
 	 dy(1)=y(1)*(30-0.25*y(1)-y(3)-y(2))+0.00000001*y(2)+0.00000001
 	 dy(2)=y(2)*(y(1)-0.00000001*y(2)-10)+0.00000001
 	 dy(3)=y(3)*(16.5-y(1)-0.5*y(3))+0.00000001
 	 dy(4)=0;
 	 dy(5)=0;
 	 dy(6)=0;
 	 function Lorenz_bifur_r
 	 Z=[]; 
 	 for r=linspace(1,500,1000); 
 	 % @舍弃前面迭带的结果，用后面的结果画图@ 
 	 [T,Y]=ode45('Lorenz',[0,1],[1;1;1;16;r;4]);  
 	 [T,Y]=ode45('Lorenz',[0,50],Y(length(Y),:)); 
 	 Y(:,1)=Y(:,2)-Y(:,1); 
 	 % @对计算结果进行判断，如果点满足x=y，则取点@
 	 for k=2:length(Y) 
 	 f=k-1; 
 	 if Y(k,1)<0   
 	 if Y(f,1)>0
 	 y=Y(k,2)-Y(k,1)*(Y(f,2)-Y(k,2))/(Y(f,1)-Y(k,1));
 	 Z=[Z r+abs(y)*i];
 	 end  
 	 else     
 	 if Y(f,1)<0  
 	 y=Y(k,2)-Y(k,1)*(Y(f,2)-Y(k,2))/(Y(f,1)-Y(k,1));   
 	 Z=[Z r+abs(y)*i];   
 	 end  
 	 end 
 	 end
 	 end
 	 plot(Z,'.','markersize',1)
 	 xlabel('r'),ylabel('|y| where x=y')
 	 \end{lstlisting}
 	 \newpage
 	 \section{基于经典4阶Runge-kutta方法研究捕食与被捕食系统}
 	 \subsection{经典4阶Runge-kutta方法}
 	 \noindent
 	 在区间$[t_k,t_{k+1}]$上对微分方程积分：
 	 \[
 	 \int_{t_k}^{t_{k+1}} f(t,x(t),y(t)) \mathrm{d}t =
 	 \int_{t_k}^{t_{t+1}} x'(t) \mathrm{d}t = x(t_{k+1})-x(t_k)
 	 \]
 	 再利用trapezoidal rule可以得到：
 	 \[
 	 x_{k+1} = x_k + \frac{h}{2}((f(t_k,x_k,y_k))+f(t_{k+1},x_{k+1},y_{k+1}))
 	 \]
 	 但右边含有 $x_{k+1} $ $y_{k+1}$，利用Euler Method 得到Heun Method：
 	 \[
 	 x_{k+1} =x_k +\frac{h}{2}(f(t_k,x_k,y_k)+f(t_{k+1},x_k+hf(t_k,x_k,y_k),y_k+hg(t_k,x_k,y_k))
 	 \]
 	 在每一步中，用Euler Method作为预报，trapezoidal rule进行校正，得到最终值。\\
 	 Runge-Kutta Method of Order 4\\
 	 基于Heum Method的推导过程，我们得到
 	 \begin{equation}
 	 \begin{cases}
 	 t_{k+1} = t_k +h,  \\
 	 x_{k+1} =x_{k} +h \cdot f(t_k,x_k,y_k), k =1,2,\cdots ,M \\
 	 y_{k+1}=y_k +h \cdot g(t_k,x_k,y_k)
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 提高精度，得到4价Runge-Kutta Method:
 	 \begin{equation}
 	 \begin{cases}
 	 x_{k+1}=x_k+ \frac{h}{6} \cdot (f_1+2f_2+2f_3+f_4)   \\
 	 y_{k+1} = y_k +\frac{h}{6} \cdot (g_1+2g_2+2g_3+g_4) \nonumber
 	 \end{cases}
 	 \end{equation}
 	 其中：
 	 \begin{equation}
 	 \begin{cases}
 	 f_1=f(t_k,x_k,y_k) \\
 	 f_2=f(t_k+\frac{h}{2},x_k+\frac{h}{2}\cdot f_1,y_k+\frac{h}{2} \cdot g_1) \\
 	 f_3=f(t_k+\frac{h}{2},x_k+\frac{h}{2}\cdot f_2,y_k+\frac{h}{2} \cdot g_2) \\
 	 f_4=f(t_k+\frac{h}{2},x_k+\frac{h}{2}\cdot f_3,y_k+\frac{h}{2} \cdot g_3)\\
 	 g_1 = g(t_k,x_k,y_k)\\
 	 g_2=f(t_k+\frac{h}{2},x_k+\frac{h}{2}\cdot f_1,y_k+\frac{h}{2} \cdot g_1) \\
 	 g_3=f(t_k+\frac{h}{2},x_k+\frac{h}{2}\cdot f_2,y_k+\frac{h}{2} \cdot g_2) \\
 	 g_3=f(t_k+\frac{h}{2},x_k+\frac{h}{2}\cdot f_3,y_k+\frac{h}{2} \cdot g_3) \\
 	 g_4=g(t_k+h,x_k+h \cdot f_3,y_k+h\cdot g_3)
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 
 	 \subsection{模型参数设定}
 	 \noindent
 	 对于捕食与被捕食系统
 	 \begin{equation}
 	 \begin{cases}
 	 \dot{x}=a-dx-\lambda xy \\
 	 \dot{y}=\lambda xy-(d+ \gamma)y
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 取$a=1 ,d=0.5,\lambda =0.1 ,\gamma = 0.02$
 	 \subsection{程序运行结果}
 	 \begin{figure}[H] \centering    
 	 	\subfigure[被捕食者与捕食者随时间变化图] { \label{fig:a}     
 	 		\includegraphics[width=0.6\columnwidth]{sheng1.jpg}  
 	 	}     
 	 	\subfigure[被捕食者和捕食者相图] { \label{fig:b}     
 	 		\includegraphics[width=0.6\columnwidth]{sheng2.jpg} \label{fig}    } 
 	 \end{figure}
 	 从图中可以看出，捕食者与被捕食者共同生存，一段时间后，二者种群数量不再作显著的周期变化，而是趋向于一个稳定的值。
 	 \subsection{平衡点稳定性分析}
 	 \begin{thm2}
 	 	\begin{equation}
 	 	\text{设有驻定方程组}
 	 	\begin{cases}
 	 	\frac{\mathrm{d}x}{\mathrm{d}t}=X(x,y)\\
 	 	\frac{\mathrm{d}y}{\mathrm{d}t} = Y(x,y) \nonumber
 	 	
 	 	\end{cases}
 	 	\text{称同时满足}X(x,y)=0,
 	 	Y(x,y)=0 \text{的点}
 	 	\end{equation}
 	 	$(x^{*},y^{*})$
 	 	为方程组的奇点 \\
 	 	对于$n$阶非线性微分方程组
 	 	
 	 	
 	 	
 	 	$$\frac{\mathrm{d}x}{\mathrm{d}t}= Ax+R(x) \eqno{(1)}
 	 	$$
 	 	
 	 	其中$R(0)=0$。显然$x=0$是方程组 的解。 \\
 	 	若方程组满足条件$ \left\| \frac{R(x)}{x} \right\|\to 0 $
 	 	\,
 	 	(当$\left\| x \right\| \to 0$时)，则称线性方程
 	 	\[
 	 	\frac{\mathrm{d}x}{\mathrm{d}t}=Ax   \eqno{(2)}
 	 	\]为方程组的线性近似方程组。\\
 	 	线性近似方程组的系数矩阵$A$的特征方程为
 	 	\[
 	 	det(A-\lambda E)=0 \eqno{(3)}
 	 	\]
 	 \end{thm2}
 	 \begin{thm2}
 	 	若特征方程(3)没有零根或零实部的根，则非线性方程组的零解稳定性与其线性近似方程组的零解的稳定性是一致的。\\
 	 	若特征方程的根均具有负实部，则方程组的零解是渐稳近稳定的;
 	 	\\若特征方程的根具有正实部的根，方程组的零解是不稳定的。
 	 	
 	 \end{thm2}
 	 对于捕食与被捕食系统
 	 \begin{equation}
 	 \begin{cases}
 	 \dot{x}=a-dx-\lambda xy \\
 	 \dot{y}=\lambda xy-(d+ \gamma)y
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 代入参数，解方程组
 	 \begin{equation}
 	 \begin{cases}
 	 a-dx-\lambda xy=0 \\
 	 \lambda xy-(d+ \gamma)y=0
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 得
 	 \begin{equation}
 	 \left\{{
 	 	\begin{array}{l}
 	 	{x_1=2} \\ {y_1=0}
 	 	\end{array}}
 	 \right.,
 	 \left\{{
 	 	\begin{array}{l}
 	 	{x_2=\frac{26}{5}}\\{y_2=- \frac{40}{13}}
 	 	\end{array}}
 	 \right. \nonumber
 	 \end{equation}
 	 方程组的所有奇点为$(2,0),(\frac{26}{5},-\frac{40}{13})$\\
 	 现讨论驻定解$(2,0)$的稳定形态\\
 	 \begin{equation}
 	 \text{令}
 	 \begin{cases}
 	 X=x-2 \\ Y=y
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 将原方程组化为
 	 \begin{equation}
 	 \begin{cases}
 	 \frac{\mathrm{d}X}{\mathrm{d}t}=a-2d-dX-2\lambda Y-\lambda XY
 	 \\
 	 \frac{\mathrm{d}Y}{\mathrm{d}t}=2\lambda Y -(d+ \gamma )Y+ \lambda XY
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 一次近似方程为
 	 \begin{equation}
 	 \begin{cases}
 	 \frac{\mathrm{d}X}{\mathrm{d}t}=dX-2\lambda Y
 	 \\
 	 \frac{\mathrm{d}Y}{\mathrm{d}t}=(2\lambda  -d-\gamma )Y
 	 \nonumber
 	 \end{cases}
 	 \end{equation}
 	 有负实部的特征根$\lambda_1=-0.5 ,\lambda_2=-0.32$，由引理2可知方程组的解是渐稳近稳定的。\\
 	 接下来讨论驻定解$(\frac{26}{5},-\frac{40}{13})$的稳定形态
 	 \\同理可得
 	 有特征根$\lambda_1=0.4175 ,\lambda_2=-1.1498$，故方程组的零解是不稳定的
 	 \lstset{language=Matlab,numbers=left,frame=shadowbox,  
 	 	, breaklines=true,escapechar=@}
 	 \subsection{Matlab代码}
 	 \begin{lstlisting}
 	 function R=rk4(f,g,a,b,xa,ya,M)  
 	 %Input    - f is the function entered as a string 'f'  
 	 %         - g is the function entered as a string 'g'  
 	 %             - a and b are the left and right endpoints  
 	 %             - xa is the initial condition x(a)  
 	 %             - ya is the initial condition y(a)  
 	 %             - M is the number of steps  
 	 %Output -R=[T' X' Y'] where T is the vector of abscissas  
 	 %              and X and Y are the vectors of ordinates  
 	 h=(b-a)/M;  
 	 T=zeros(1,M+1);  
 	 X=zeros(1,M+1);  
 	 Y=zeros(1,M+1);  
 	 T=a:h:b;  
 	 X(1)=xa;  
 	 Y(1)=ya;  
 	 for j=1:M  
 	 k1=h*feval(f,T(j),X(j),Y(j));  
 	 k2=h*feval(g,T(j),X(j),Y(j));  
 	 k3=h*feval(f,T(j)+h/2,X(j)+k1/2,Y(j)+k2/2);  
 	 k4=h*feval(g,T(j)+h/2,X(j)+k1/2,Y(j)+k2/2);  
 	 k5=h*feval(f,T(j)+h/2,X(j)+k3/2,Y(j)+k4/2);  
 	 k6=h*feval(g,T(j)+h/2,X(j)+k3/2,Y(j)+k4/2);   
 	 k7=h*feval(f,T(j)+h,X(j)+k5,Y(j)+k6);  
 	 k8=h*feval(g,T(j)+h,X(j)+k5,Y(j)+k6);  
 	 X(j+1)=X(j)+(k1+2*k3+2*k5+k7)/6;  
 	 Y(j+1)=Y(j)+(k2+2*k4+2*k6+k8)/6;  
 	 end  
 	 R=[T' X' Y'];  
 	 
 	 %@希腊字母伽马替换为c,拉姆达替换为b@
 	 function f=fun1(t,x,y)
 	 a=1; d=0.5 ; b=0.1; c=0.02;
 	 f=a-d*x-b*x*y
 	 function g=fun2(t,x,y)
 	 a=1; d=0.5 ; b=0.1; c=0.02;
 	 g= d*x*y-(d+c)*y
 	 
 	 a=0;
 	 b=50;
 	 xa=2;
 	 ya=25;
 	 M=50;
 	 f='fun1' ;g='fun2' ;
 	 R=rk4(f,g,a,b,xa,ya,M);
 	 plot(R(:,1),R(:,2),'r',R(:,1),R(:,3),'b');
 	 %xlabel('@时间@ t');ylabel('@种群规模@');legend('@捕食者@','@被捕食者@');
 	 plot(R(:,2),R(:,3),'-');
 	 xlabel('@捕食者@');ylabel('@被捕食者@');
 	 \end{lstlisting}
 	 \newpage
 	 \section{线性回归证明题}
 	 \[
 	 \hat{\beta}_0 = \bar{y} - \hat{\beta}_1 \bar{x}_1 -\hat{\beta}_2 \bar{x}_2 - \cdots \hat{\beta}_k \bar{x}_k
 	 \]
 	 证明：在多元回归模型中
 	 \[
 	 y_i = \beta_0 + \beta_1 x_{i1} + \beta_2 x_{i2} + \cdots
 	 + \beta_k x_{ik} + \varepsilon_i
 	 \]
 	 \[
 	 \hat{y}_i = \hat{\beta}_0 + \hat{\beta}_1 x_{i1} + \hat{\beta}_2 x_{i2} + \cdots + \hat{\beta}_k x_{ik}
 	 \]
 	 \[
 	 F(x_{i1},\cdots,x_{ik};y) = \Sigma_{i=1}^{n} \varepsilon _{i}^2 = \Sigma_{i=1}^{n} (y_i - \hat{y}_i)^2 = 
 	 \Sigma _{i=1}^n \left(y_i -  \hat{\beta}_0 - \hat{\beta}_1 x_{i1} - \hat{\beta}_2 x_{i2} - \cdots - \hat{\beta}_k x_{ik}\right)
 	 \]
 	 要使残差平方和最小，有：
 	 \[
 	 \frac{\partial F}{\partial \hat{\beta}_0}=2 \Sigma_{i=1}^n \left(y_i -  \hat{\beta}_0 - \hat{\beta}_1 x_{i1} - \hat{\beta}_2 x_{i2} - \cdots - \hat{\beta}_k x_{ik}
 	 \right)=0
 	 \]
 	 对等号两边对每个点求和，可得
 	 \[
 	 n \hat{\beta}_0 = \Sigma _{i=1}^n y_i - \Sigma _{i=1}^n \hat{\beta}_1 x_{i1} -\Sigma _{i=1}^n \hat{\beta}_12 x_{i2}-
 	 \cdots -\Sigma _{i=1}^n \hat{\beta}_k x_{ik}
 	 \]
 	 故
 	 \[
 	 \hat{\beta}_0 = \bar{y} - \hat{\beta}_1 \bar{x}_1 -\hat{\beta}_2 \bar{x}_2 - \cdots \hat{\beta}_k \bar{x}_k
 	 \]
 	 证毕
 	 \begin{thm3}
 	 	\end{thm3}
 	 	\[
 	 	\Sigma (y_i-\bar{y})^2 = \Sigma(y_i-\hat{y})^2 + \Sigma (\hat{y}-\bar{y})^2
 	 	\]
 	 	引理1:
 	 	\[
 	 	\Sigma \,\varepsilon_i =0
 	 	\]
 	 	因为
 	 	\[
 	 	\frac{\partial F}{\partial \hat{\beta}_0}=2 \Sigma_{i=1}^n \left(y_i -  \hat{\beta}_0 - \hat{\beta}_1 x_{i1} - \hat{\beta}_2 x_{i2} - \cdots - \hat{\beta}_k x_{ik}
 	 	\right)= \Sigma \,\varepsilon_i =0
 	 	\]
 	 	引理2：
 	 	\[
 	 	\Sigma_{i=1}^n x_{ij} \varepsilon _i =0 \,\, (j=1 ,2 ,\cdots,k)
 	 	\]
 	 	因为
 	 	\[
 	 	\frac{\partial F}{\partial \hat{\beta}_1}=2 \Sigma_{i=1}^n (-x_{i1}) \left(y_i -  \hat{\beta}_0 - \hat{\beta}_1 x_{i1} - \hat{\beta}_2 x_{i2} - \cdots - \hat{\beta}_k x_{ik}
 	 	\right)= \Sigma \, (-x_{i1}) \varepsilon_i =0
 	 	\]
 	 	\[
 	 	\cdots
 	 	\]
 	 	\[
 	 	\frac{\partial F}{\partial \hat{\beta}_k}=2 \Sigma_{i=1}^n (-x_{k1}) \left(y_i -  \hat{\beta}_0 - \hat{\beta}_1 x_{k1} - \hat{\beta}_2 x_{k2} - \cdots - \hat{\beta}_k x_{kk}
 	 	\right)= \Sigma \, (-x_{k1}) \varepsilon_i =0
 	 	\]
 	 	\\
 	 	证明：
 	 	\[
 	 	\Sigma (y_i-\bar{y})^2 =\Sigma [(y_i-\hat{y})+(\hat{y}-\bar{y})]^2 =\Sigma(y_i-\hat{y})^2+\Sigma(\hat{y}-\bar{y})^2+2 \Sigma(y_i-\hat{y})(\hat{y}-\bar{y})
 	 	\]
 	 	其中:
 	 	\[
 	 	\Sigma(y_i-\hat{y})(\hat{y}-\bar{y})=\Sigma\varepsilon(\hat{y}-\bar{y})=\Sigma\varepsilon \hat{y}-\Sigma\varepsilon\bar{y}
 	 	\]
 	 	\[
 	 	\Sigma\varepsilon\bar{y}=\bar{y}\Sigma\varepsilon=0
 	 	\]
 	 	\[
 	 	\Sigma\varepsilon \hat{y}=\Sigma\varepsilon ( \hat{\beta}_0 + \hat{\beta}_1 x_{i1} + \hat{\beta}_2 x_{i2} + \cdots + \hat{\beta}_k x_{ik})
 	 	\]
 	 	由引理2可得
 	 	\[
 	 	\Sigma\varepsilon \hat{y}=0
 	 	\]
 	 	因此
 	 	\[
 	 	2 \Sigma(y_i-\hat{y})(\hat{y}-\bar{y})=0
 	 	\]
 	 	故
 	 	\[
 	 	\Sigma (y_i-\bar{y})^2 = \Sigma(y_i-\hat{y})^2 + \Sigma (\hat{y}-\bar{y})^2
 	 	\]
 	 	证毕
 	 	\newpage
 	 	\section{LaTex练习}
 	 	\subsection{Introduction}
 	 	\subsubsection{Introduction to Problem}
 	 	Since its introduction in the Winter Olympic Games in1998, the popularity of half-pipe snowboarding competitions has surged. At the Turin 2006 Olympic Winter Games, snowboarding competitions posted the second-highest average viewer hours per hours per day of competition (Figure 1).It is widely believed that, when released, the comparable statistics for the Vancouver 2010 Olympic Winter Games will show even greater proportional viewership of snowboarding events. The objective of competitive half-pipe snowboarding is to perform well-executed, unique routines comprised of challenging aerial acrobatic manoeuvres that are executed as high in the air as possible. Similar to figure skating, half-pipe snowboard competitions are adjudicated events, whereby a panel of judges assign each competitor's performance a subjective score.For this reason, there is broad interest in designing snowboard courses that optimize one or both of these key performance variables. This paper seeks to design such courses, using both heuristic and mathematical arguments, which are suppoorted by simulations
 	 	\begin{figure}[htp]
 	 		\centering
 	 		\includegraphics[scale=0.6]{latex1.png}
 	 		\caption{Average Viewer Hours per Day of Competition, Turin 2006 Olympic Winter}
 	 	\end{figure}
 	 	\subsubsection{Current Half-Pipe Engineering \& Dimensions}
 	 	To understand half-pipe engineering dimensions, one must first familiarize themselves with the components of a half-pipe(Figure 2). The "deck" can only be used for very few tricks that are less concerned  with air time of rotation of the deck is less relevant for the objective of this paper, and we will incorporate the average dimensions of existing half-pipe decks in our structure.
 	 	\begin{figure}[H]
 	 		\centering
 	 		\includegraphics[scale=0.6]{latex2.png}
 	 		\caption{Components of a Half-Pipe(Not to Scale)}
 	 	\end{figure}
 	 	
 	 	\subsection{Analysis of the Problem}
 	 	We know from Model 1.1 that the curve chosen does not alter the amount of vertical air that can be achieved. Due to the symmetry assumption, this is the same problem as solving for the first half of the curve. Without loss of generality, we set fixed points $A = P_{0} (0,0)$ and $ B = P_1(l,h)$ in the Euclidean plane (with the convention that downward moves in the $y$-axis are positive). The kinetic energy of the sliding body of mass $m$ at each instant must equal the potential energy lost from the initial height(by law of conservation of total energy). In order words, $E_K(P_n) = (1/2)mv^2 = mgy$, where $g$ is the acceleration due to gravity. We therefore see that $v = \sqrt{2gy}$. From multivariate calculus we also know that the arc length of the curve; $y = y(x)$, $x_0 \leqslant x \leqslant x_T$ is:
 	 	\[ 
 	 	arc\, \, length = \int_{x_0}^{x_T} \mathrm{d}s =\int_{x_0}^{x_T} \sqrt{1+[y']^2} \mathrm{d}x
 	 	\]
 	 	Thus in our problem, the total time, $T$, needed to move from $A = P_0(0,0)$ to position $B = P_1(l,h)$ is:
 	 	\[
 	 	T = \int \frac{distance \, \,  travelled}{speed} = \int \frac{\mathrm{d}s}{v} = \int_{0}^{l} \frac{\sqrt{1+[y']^2}}{\sqrt{2gy}} \mathrm{d}x
 	 	\]
 	 	Our objective is to find the curve $y = y(x)$ that minimizes$T$. Using the Euler-Lagrange equation we have:
 	 	\[
 	 	c_2 = c_1 \sqrt{2g} = \left (\frac{\sqrt{1+[y']^2}}{\sqrt{y}} \right) 
 	 	- \left((y') \frac{ \partial }{\partial y'} 
 	 	\left(\frac{ \sqrt{1+[y']^2}}{\sqrt{y}} \right) \right) =
 	 	\left(\frac{1+[y']^2}{\sqrt{y}} \right) - \left(\frac{[y']^2}{\sqrt{y} \sqrt{1+[y']^2}} \right)
 	 	\]
 	 	where $c_1$ and $c_2$ are constants. Multiplying both sides by factor $\sqrt{y} \sqrt{1+[y']^2}$ and then squaring yields: $y(1+[y']^2) = (1/c_2)^2 = \gamma$. Solving for $y'$, we get: $y' = \mathrm{d}y / \mathrm{d}x = \sqrt{(\gamma - y)/y}$. Now we change variables such that: $\sqrt{y/(\gamma -y)} = tan(\varphi)$ Isolating for $y$, we get: $y = \gamma sin^2(\varphi)$.Use chain rule as follows:
 	 	\[
 	 	\frac{\mathrm{d}\varphi}{\mathrm{d}x} = \frac{\mathrm{d}\varphi}{\mathrm{d}y} \cdot 
 	 	\frac{\mathrm{d}y}{\mathrm{d}x} =
 	 	\frac{1}{2\gamma (sin(\varphi)) (cos(\varphi)) } \cdot 
 	 	\frac{1}{(tan(\varphi))} = \frac{1}{2 \gamma (sin^2(\varphi))}
 	 	\]
 	 	
 	 	\[
 	 	p_{j}=\begin{cases} 0,&\text{if $j$ is odd}\\
 	 	r!\,(-1)^{j/2},&\text{if $j$ is even}
 	 	\end{cases}
 	 	\]
 	 	
 	 	This clearly shows that the exiting velocity is independent of mass.
 	 	
 	 	\[
 	 	\arcsin \theta  =
 	 	\mathop{{\int\!\!\!\!\!\int\!\!\!\!\!\int}\mkern-31.2mu
 	 		\bigodot}\limits_\varphi
 	 	{\mathop {\lim }\limits_{x \to \infty } \frac{{n!}}{{r!\left( {n - r}
 	 				\right)!}}} \eqno (1)
 	 	\]
 	 	
 	 	
 	 	
 	 	\begin{thebibliography}{99}
 	 		\bibitem{1} D.~E. KNUTH   The \TeX{}book  the American
 	 		Mathematical Society and Addison-Wesley
 	 		Publishing Company , 1984-1986.
 	 		\bibitem{2}Lamport, Leslie,  \LaTeX{}: `` A Document Preparation System '',
 	 		Addison-Wesley Publishing Company, 1986.
 	 	\end{thebibliography}
 	 	\subsection{The Tex code of this article}
 	 	\begin{lstlisting}[numbers=left, numberstyle=\tiny,frame=shadowbox]
 	 	\documentclass{mcmthesis}
 	 	\mcmsetup{CTeX = false, 
 	 	tcn = 0000, problem = C,
 	 	sheet = false, titleinsheet = true, keywordsinsheet = true,
 	 	titlepage = true, abstract = true}
 	 	\usepackage{palatino}
 	 	\usepackage{lipsum}
 	 	\usepackage{graphicx}
 	 	\usepackage{float}
 	 	\usepackage{amsmath}
 	 	\usepackage{amssymb}
 	 	\usepackage{listings}
 	 	\title{Designing the Optimal Snowboard Half-Pipe(
 	 	Excerpt)}
 	 	\author{Group \# 11199}
 	 	\date{\today}
 	 	\begin{document}
 	 	\maketitle
 	 	\section{Introduction}
 	 	\subsection{Introduction to Problem}
 	 	Since its introduction in the Winter Olympic Games in1998, the popularity 
 	 	of half-pipe snowboarding competitions has surged. At the Turin 2006 Olympic
 	 	Winter Games, snowboarding competitions posted the second-highest average
 	 	viewer hours per hours per day of competition (Figure 1).It is widely believed
 	 	that, when released, the comparable statistics for the Vancouver 2010 
 	 	Olympic Winter Games will show even greater proportional viewership of 
 	 	snowboarding events. The objective of competitive half-pipe snowboarding
 	 	is to perform well-executed, unique routines comprised of challenging 
 	 	aerial acrobatic manoeuvres that are executed as high in the air as possible.
 	 	Similar to figure skating, half-pipe snowboard competitions are adjudicated 
 	 	events, whereby a panel of judges assign each competitor's performance a 
 	 	subjective score.For this reason, there is broad interest in designing 
 	 	snowboard courses that optimize one or both of these key performance variables. 
 	 	This paper seeks to design such courses, using both heuristic and mathematical
 	 	arguments, which are suppoorted by simulations
 	 	\begin{figure}[htp]
 	 	\centering
 	 	\includegraphics[scale=0.6]{picture1.png}
 	 	\caption{Average Viewer Hours per Day of Competition, Turin 2006 Olympic Winter}
 	 	\end{figure}
 	 	\subsection{Current Half-Pipe Engineering \& Dimensions}
 	 	To understand half-pipe engineering dimensions, one must first familiarize 
 	 	themselves with the components of a half-pipe(Figure 2). The "deck" can only 
 	 	be used for very few tricks that are less concerned  with air time of rotation 
 	 	of the deck is less relevant for the objective of this paper, and we will 
 	 	incorporate the average dimensions of existing half-pipe decks in our structure.
 	 	\begin{figure}[H]
 	 	\centering
 	 	\includegraphics[scale=0.6]{picture2.png}
 	 	\caption{Components of a Half-Pipe(Not to Scale)}
 	 	\end{figure}
 	 	
 	 	\section{Analysis of the Problem}
 	 	We know from Model 1.1 that the curve chosen does not alter the amount of 
 	 	vertical air that can be achieved. Due to the symmetry assumption, 
 	 	this is the same problem as solving for the first half of the curve. Without 
 	 	loss of generality, we set fixed points $A = P_{0} (0,0)$ and $ B = P_1(l,h)$ 
 	 	in the Euclidean plane (with the convention that downward moves in the 
 	 	$y$-axis are positive). The kinetic energy of the sliding body of mass $m$ 
 	 	at each instant must equal the potential energy lost from the initial height(by 
 	 	law of conservation of total energy). In order words, $E_K(P_n) = (1/2)mv^2
 	 	= mgy$, where $g$ is the acceleration due to gravity. We therefore see 
 	 	that $v = \sqrt{2gy}$. From multivariate calculus we also know that the 
 	 	arc length of the curve; $y = y(x)$, $x_0 \leqslant x \leqslant x_T$ is:
 	 	\[ 
 	 	arc\, \, length = \int_{x_0}^{x_T} \mathrm{d}s =\int_{x_0}^{x_T} 
 	 	\sqrt{1+[y']^2} \mathrm{d}x
 	 	\]
 	 	Thus in our problem, the total time, $T$, needed to move from $A = P_0(0,0)$ to 
 	 	position $B = P_1(l,h)$ is:
 	 	\[
 	 	T = \int \frac{distance 
 	 	\, \,  travelled}
 	 	{speed} = \int \frac{\mathrm{d}s}{v} = \int_{0}^{l} \frac{\sqrt{1+[y']^2}}
 	 	{\sqrt{2gy}} \mathrm{d}x
 	 	\]
 	 	Our objective is to
 	 	find the curve $y
 	 	= y(x)$ that 
 	 	minimizes$T$. Using
 	 	the Euler-Lagrange equation we have:
 	 	\[
 	 	c_2 = c_1 \sqrt{2g}
 	 	= \left (\frac{\sqrt{1+[y']^2}}{\sqrt{y}} \right) 
 	 	- \left((y') \frac{ \partial }{\partial y'} 
 	 	\left(\frac{ \sqrt{1+[y']^2}}{\sqrt{y}} \right) \right) =
 	 	\left(\frac{1+[y']^2}
 	 	{\sqrt{y}} \right) - 
 	 	\left(\frac{[y']^2}
 	 	{\sqrt{y} \sqrt{1+[y']^2}} \right)
 	 	\]
 	 	where $c_1$ and $c_2$ are constants. Multiplying both sides by factor 
 	 	$\sqrt{y} \sqrt{1+[y']^2}$ and then squaring yields: $y(1+[y']^2) = (1/c_2)^2 
 	 	= \gamma$. Solving for $y'$, we get: $y' = \mathrm{d}y / \mathrm{d}x = 
 	 	\sqrt{(\gamma - y)/y}$. Now we change variables such that: $\sqrt{y/(\gamma -y)} 
 	 	= tan(\varphi)$ Isolating for $y$, we get: $y = \gamma sin^2(\varphi)$.Use 
 	 	chain rule as follows:
 	 	\[
 	 	\frac{\mathrm{d}\varphi}{\mathrm{d}x} = \frac{\mathrm{d}\varphi}{\mathrm{d}y} 
 	 	\cdot 
 	 	\frac{\mathrm{d}y}{\mathrm{d}x} =
 	 	\frac{1}{2\gamma (sin(\varphi)) (cos(\varphi)) } \cdot 
 	 	\frac{1}{(tan(\varphi))} = \frac{1}{2 \gamma (sin^2(\varphi))}
 	 	\]
 	 	
 	 	\[
 	 	p_{j}=\begin{cases} 0,&\text{if $j$ is odd}\\
 	 	r!\,(-1)^{j/2},&\text{if $j$ is even}
 	 	\end{cases}
 	 	\]
 	 	
 	 	This clearly shows that the exiting velocity is independent of mass.
 	 	
 	 	\[
 	 	\arcsin \theta  =
 	 	\mathop{{\int\!\!\!\!\!\int\!\!\!\!\!\int}\mkern-31.2mu
 	 	\bigodot}\limits_\varphi
 	 	{\mathop {\lim }\limits_{x \to \infty } \frac{{n!}}{{r!\left( {n - r}
 	 	\right)!}}} \eqno (1)
 	 	\]
 	 	
 	 	
 	 	
 	 	\begin{thebibliography}{99}
 	 	\bibitem{1} D.~E. KNUTH   The \TeX{}book  the American
 	 	Mathematical Society and Addison-Wesley
 	 	Publishing Company , 1984-1986.
 	 	\bibitem{2}Lamport, Leslie,  \LaTeX{}: `` A Document Preparation System '',
 	 	Addison-Wesley Publishing Company, 1986.
 	 	\end{thebibliography}
 	 	\appendix
 	 	\section{The Tex code of this article}
 	 	\begin{lstlisting}[numbers=left, numberstyle=\tiny,frame=shadowbox]
 	 	
 	 	\end{lstlisting}
 	 	
\end{document}
