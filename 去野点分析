\documentclass[UTF8]{ctexart}
\usepackage{listings}
\usepackage{xcolor}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{mathtools}
\usepackage{xcolor}
\usepackage{amssymb}
\usepackage{float}
\title{\heiti 基于RANSAC方法去野点拟合直线}
\author{\kaishu 王}
\date{\today}
\begin{document}
	\maketitle
	\tableofcontents
	\newpage
	\setlength{\parindent}{2em}
	\section{RANSAC方法}
	假设我们要将$n$个数据点$X={x_1,x_2,...,x_n}$拟合为一个由至少$m$个点决定的模型（ $m \leqslant  n$）。 
	从X中随机选取$m$个项并拟合一个模型。
	给定偏差 $\xi$，计算X中相对于模型的残差在偏差 $\xi$的个数，如果元素个数大于一个阈值$t$，根据一致点集重新拟合模型（可以利用最小二乘或其变种），算法终止。设$k=k+1$，如果$k$小于一个事先给定的$K$，重新选取$m$个项再迭代，否则采用具有迄今最大的一致点集模型，或算法失败。
	
	\section{模型参数设定}
	因为本文为直线拟合，故应选取2个项，即$m=2$。
	又鉴于本文要解决的问题样本数量较少，为保证结果有足够的概率去拟合，故设置迭代次数$k=100$，偏差$\xi$
	=0.5, 阈值$t$为数据个数的2/3。
	\section{程序运行结果}
	\begin{figure}[H]
		\centering
		\includegraphics[scale=0.5]{results.jpg}
		\caption{程序运行结果}
	\end{figure}
	图中被涂实的点为程序筛选出来的拟合模型的点，直线为求出的最佳直线；根据结果来看，RANSAC算法较好地实现了去野点直线拟合。
\lstset{language=Matlab,numbers=left,frame=shadowbox,  
	, breaklines=true,escapechar=@}
\section{Matlab代码}
\begin{lstlisting}
%@此函数目的在于计算直线方程@
% a*x1+b*x2+c=0
% a*x2+b*x2+c=0
% a^2+b^2=1      @简化 后面 计算点到直线距离求和@
function line = DistaF(data)
x = data(1,:);        %@取出data第一行@
y = data(2,:);        %@取出data第二行@
k = (y(2)-x(2))/(y(1)-x(1));
a = sqrt(1-1/(1+k^2)); %@根据三个方程解得@
b = sqrt(1-a^2);
if k>0 
b=-b;
end
c=-a*x(1)-b*y(1);
line = [a,b,c];
end

close all;clear all;clc;

data=[1,2.1;2,3.9;3,4.1;4,8.2;5,10.3;6,0];
plot(data(:,1),data(:,2),'ro');     %@显示全部数据@

K=100;             %@设置最大迭代次数@
sigma=0.4;         %@设置拟合直线与数据距离的偏差@
pretotal=0;     %@符合拟合模型的数据的个数@
k=1;
while pretotal < size(data,1)*2/3 &&  k<K      
%@有2/3的数据符合拟合模型或达到最大迭代次数就可以退出了，@
%@size(data,1)返回data的行数@
SampIndex=floor(1+ size(data,1)*rand(2,1));  %@产生两个随机索引，范围(0,7)找样本用，@
%@floor向下取整,保证取出的数在1~6之间@

samp1=data(SampIndex(1),:);     %@对原数据随机抽样两个样本@
samp2=data(SampIndex(2),:);

line=DistaF([samp1;samp2]);   %@对两个数据拟合出直线@
%@或其他变种拟合方法@
mask=abs(line*[data ones(size(data,1),1)]');    %@求每个数据到拟合直线的距离@
total=sum(mask<sigma);              %@计算数据距离直线小于一定阈值的数据的个数@

if total>pretotal            %@找到符合拟合直线数据最多的拟合直线@
pretotal=total;
bestline=line;          %@找到最好的拟合直线@
end  
k=k+1;
end

%@显示符合最佳拟合的数据@
mask=abs(bestline*[data ones(size(data,1),1)]')<sigma;    
hold on;
for i=1:length(mask)
if mask(i)
stem(data(i,1),data(i,2),'fill');
end
end
%@画出最佳拟合曲线@
xAxis = 1:6;
yAxis =  (-bestline(1)*xAxis - bestline(3) )/bestline(2);
plot(xAxis, yAxis,'r-','LineWidth',2);
\end{lstlisting}


\end{document}
